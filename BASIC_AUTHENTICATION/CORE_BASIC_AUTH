//////   AUTHENTICATIONHANDLER :
public class MyAuthHandler: AuthenticationHandler<AuthenticationSchemeOptions>{
   
   protected override Task<AuthenticateResult> HandleAuthenticationAsync(){
      if(!Request.Headers.ContainsKey("Authorization")) return AuthenticateResult.Fail("No Authorization");
      var val = AuthenticationHeaderValue.Parse(Request.Headers["Authorization"]);
      var bytes = Convert.FromBase64String(val.Parameter);
      string[] credentials = Encoding.UTF8.GetString(bytes).Split(":");
      User u = ctx.Users.Single(u => u.Name == credentials[0] && u.Password == credentials[1]);
      if(u == null) return AuthenticateResult.Fail("Invalid username or password");
      else 
      {
         var c = new[]{ new Claim(ClaimTypes.Name, u.Email)};
         var i = new ClaimsIdentity(c, Sheme.Name);
         var p = new ClaimsPrincipal(i);
         var t = new AuthenticationTicket(p,Scheme.Name);
         AuthenticateResult.Success(t);      
      }
   }
}

///// STARTUP :
// ConfigureServices()  :
services.AddAuthentication("BasicAuthentication").AddScheme<AuthenticationSchemeOptions, MyAuthHandler>("BasicAuthentication",null);


// Configure() : 
app.UseAuthentication();
app.UseAuthorization();


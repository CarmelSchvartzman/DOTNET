internal class Common
    {
        public Lazy<string> Id = new Lazy<string>(() => { return "DEFAULT"; });
        public Lazy<IList<int>> List = new Lazy<IList<int>>(() => { return ListPopulater(); });

        public static IList<int> ListPopulater()
        {
            return new List<int> {    1, 2, 3, 4, 5 };
        }

        [BenchmarkDotNet.Attributes.Benchmark]
        internal void Run()
        {
            string s1 = Id.Value;             
            int i = List.Value[2]; 

            Task<string[]> t =   Task.Run<string[]>(()=> Heavy());  //  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
             
            t.Wait();
        }

        private string[]  Heavy()
        {
            string path = @"C:\Users\Public\Pictures\Sample Pictures\";
            string[] files = System.IO.Directory.GetFiles(path);

            var result = (from file in files.AsParallel()
                          let info = new System.IO.FileInfo(file)
                          where info.Extension == ".jpg"
                          select file).ToArray();

            return result;
        }
    }
